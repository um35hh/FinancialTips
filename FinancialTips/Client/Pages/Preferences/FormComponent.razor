@using FinancialTips.Client.Components

<EditForm Model="@preference" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">


        <div class="form-group">

            <label>Investment Amount</label>
            <div>
                <InputNumber @bind-Value="preference.InvestAmount" class="form-control" />
                <ValidationMessage For="@(()=> preference.InvestAmount)" />
            </div>
        </div>

    </div>

    <div class="form-group">


        <div class="form-group">

            <label>Risk </label>
            <div>
                <InputNumber @bind-Value="preference.RiskMinMax" class="form-control" />
                <ValidationMessage For="@(()=> preference.RiskMinMax)" />
            </div>
        </div>

    </div>

    <div class="form-group">


        <div class="form-group">

            <label>Commitment Period </label>
            <div>
                <InputNumber @bind-Value="preference.CommitmentPeriod" class="form-control" />
                <ValidationMessage For="@(()=> preference.CommitmentPeriod)" />
            </div>
        </div>

    </div>

    <div class="form-group">


        <div class="form-group">

            <label>Average Income </label>
            <div>
                <InputNumber @bind-Value="preference.AverageIncome" class="form-control" />
                <ValidationMessage For="@(()=> preference.AverageIncome)" />
            </div>
        </div>

    </div>

    <button type="submit" class="btn btn-success btn-block">
        @ButtonText
    </button>


    <BackToList Target="preferences" />

</EditForm>




@code {

    [Parameter] public Preference preference { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


}
