@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Clients</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">

        <div class="form-group">

            <label>Client Name: </label>
            <div>
                <InputText @bind-Value="customer.CustName" class="form-control" />
                <ValidationMessage For="@(()=> customer.CustName)" />
            </div>
        </div>

    </div>


    <div class="form-group">

        <div class="form-group">

            <label>Client Age: </label>
            <div>
                <InputNumber @bind-Value="customer.CustAge" class="form-control" />
                <ValidationMessage For="@(()=> customer.CustAge)" />
            </div>
        </div>

    </div>


    <div class="form-group">

        <div class="form-group">

            <label>Client Gender: </label>
            <div>
                <InputText @bind-Value="customer.CustGender" class="form-control" />
                <ValidationMessage For="@(()=> customer.CustGender)" />
            </div>
        </div>

    </div>


    <div class="form-group">

        <div class="form-group">

            <label>Client Contact: </label>
            <div>
                <InputNumber @bind-Value="customer.CustContact" class="form-control" />
                <ValidationMessage For="@(()=> customer.CustContact)" />
            </div>
        </div>

    </div>


    <button type="submit" class="btn btn-success btn-block">
        Create Client
    </button>

</EditForm>

@code {

    Customer customer = new Customer();

    private IList<Customer> Customers;
    //private IList<Preference> Preferences;
    //private IList<Instrument> Instruments;



    protected async override Task OnInitializedAsync()

    {

        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
        //Preferences = await _client.GetFromJsonAsync<List<Preference>>($"{Endpoints.PreferencesEndpoint}");

        //Instruments = await _client.GetFromJsonAsync<List<Instrument>>($"{Endpoints.InstrumentsEndpoint}");

    }

    private async Task CreateCustomer()

    {

        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);

        _navManager.NavigateTo("/customers/");

    }

}